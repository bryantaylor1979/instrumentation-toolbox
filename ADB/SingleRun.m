classdef SingleRun < handle
    properties
        handles
    end
    methods
        function Example(obj)
           %%
           close all
           clear classes
           obj = SingleRun
           
           %%
           obj.handles.ADB = ADB_Logging;
           obj.handles.decodelistener = addlistener(obj.handles.ADB, 'Buffer', 'PostSet', @obj.Decode);
            
        end
        function log = Decode(varargin)
            %%
            obj = varargin{1};
            Buffer = obj.handles.ADB.Buffer;
            Buffer = obj.handles.ADB.Buffer;
            fieldnames = {  'substate', ...
                            'FOM', ...
                            'reason', ...
                            'dFOM_from_MAX', ...
                            'max_focus_fom', ...
                            'r', ...
                            'g', ...
                            'b', ...
                            'max_sat', ...
                            'min_sat', ...
                            'sat', ...
                            'deltasat', ...
                            'cdi_exposure', ...
                            'prev_cdi_exposure', ...
                            'FOM_adjusted', ...
                            'prev_FOM_adjusted', ...               
                            'av_dFOM', ...        
                            'dFOM_thresh', ...
                            'dFOM_thresh_lower', ...
                            'dFOM_f2f', ...
                            'dgrn_thresh', ...
                            'dgrn_thresh_lower', ...
                            'grn_adj', ...
                            'prev_grn_adj', ...
                            'dgf2f', ...    
                            'dgf2f_adjusted', ...
                            'delta_FOM', ...
                            'g_norm', ...
                            'dFOMf2f_adjusted', ...
                            'zoom_width'};
%%                        
           [log,f] = obj.DecodeLog(Buffer,fieldnames); % Buffer: this contains lots of stuff not just caf. 
                                                       % log: only contains decoded CAF parameters
           plot_LensPositionState(log)
        end
        function [log,f] = DecodeLog(obj,Buffer,fieldnames)
           %%
           addframeNum = false;
           logfile = textscan(Buffer, '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s', ...
                                      'Delimiter', ':', ...
                                      'MultipleDelimsAsOne', 1);
                                  
           n = find(strcmpi(logfile{3},'CAF_MATLAB'));

                        
           x = size(fieldnames,2);
           for i = 1:x
                param = str2double(logfile{i+3}(n));
             	celltable(:,i) =  param;
           end

           
           %% get frame number
           if addframeNum == true
               n = find(strcmpi(logfile{16},'frame'));
               FrameNumbers = str2double(logfile{17}(n));
               celltablef = [celltable,FrameNumbers];
               celltablef = sortrows(celltablef,31);      
               [x,y]= size(celltablef);
               celltablef = num2cell(celltablef);
               f = [fieldnames,'frame_num'];
           else
               f = fieldnames;
               celltablef = num2cell(celltable);
           end
           %%
           log = cell2struct(celltablef,f,2);            
        end
    end
end
    